{"componentChunkName":"component---src-templates-blog-post-js","path":"/apollo/subscribeToMore/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"64da7bf7-2d18-500b-9e09-c6468130ccfa","excerpt":"코드 설명 위의 코드에서 에 2가지 옵션을 전달합니다.  :  실행할 구독을 나타냅니다.  Apollo Client에 쿼리의 를 subscriptionDataGraphQL…","html":"<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">subscribeToMore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    document<span class=\"token operator\">:</span> <span class=\"token constant\">MESSAGES_SUBCRIPTION</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">updateQuery</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> subscriptionData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test ======> '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> prev<span class=\"token punctuation\">,</span> subscriptionData <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subscriptionData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> prev<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> newMessageItem <span class=\"token operator\">=</span> subscriptionData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>newMessage<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        getMessage<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span>prev<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">,</span>\n          messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>newMessageItem<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>prev<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h2>\n<p>위의 코드에서 <code class=\"language-text\">subscribeToMore</code>에 2가지 옵션을 전달합니다.</p>\n<ul>\n<li><code class=\"language-text\">document</code> :  실행할 구독을 나타냅니다.</li>\n<li><code class=\"language-text\">updateQuery</code> Apollo Client에 쿼리의 <code class=\"language-text\">현재 캐시 된 결과( prev)</code>를 subscriptionDataGraphQL 서버에서 <code class=\"language-text\">푸시한 결과</code>와 <code class=\"language-text\">결합</code>하는 방법을 알려주는 함수입니다. 이 함수의 <strong>반환 값은 쿼리에 대해 현재 캐시 된 결과를 완전히 대체합니다.</strong></li>\n<li>\n<p><code class=\"language-text\">variables</code> 구독을 실행할 때 포함 할 변수를 나타냅니다.</p>\n<ul>\n<li>이 옵션은 위의 코드에서 사용되진 않았지만 나중에 필요할거같아 적어두었습니다! </li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">prev</code>와 <code class=\"language-text\">subscriptionData</code>에 무엇이 들어있나 확인해보았습니다.</p>\n<p style=\"margin-top:2rem; padding:2rem; border: 2px solid #dcdcdc;\">\n  <img src=\"https://images.velog.io/images/yhe228/post/b4798e0e-6d98-4362-b40c-a452064eb5e3/image.png\">\n</p>\n<p>이렇게 확인해보니 아래의 코드에서 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">messages: [newMessageItem, ...prev.getMessage.messages]</code></pre></div>\n<p>이렇게 해준 이유를 아시겠죠?..! ☺️</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">updateQuery</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prev<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> subscriptionData <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test ======> '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> prev<span class=\"token punctuation\">,</span> subscriptionData <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subscriptionData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> prev<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> newMessageItem <span class=\"token operator\">=</span> subscriptionData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>newMessage<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    getMessage<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>prev<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">,</span>\n      messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>newMessageItem<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>prev<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"참고글\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EA%B8%80\" aria-label=\"참고글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고글</h3>\n<p><a href=\"https://www.apollographql.com/docs/react/data/subscriptions/#subscribing-to-updates-for-a-query\">https://www.apollographql.com/docs/react/data/subscriptions/#subscribing-to-updates-for-a-query</a></p>","frontmatter":{"title":"< apollo > 구독후 데이터를 업데이트하는 방법","date":"February 05, 2021"}}},"pageContext":{"slug":"/apollo/subscribeToMore/","previous":{"fields":{"slug":"/review/react_2/"},"frontmatter":{"title":"< 코드숨 > 리액트 2주차 회고","category":"review","draft":false}},"next":{"fields":{"slug":"/apollo/cacheUpdateAfterMutation/"},"frontmatter":{"title":"< apollo > writeQuery 사용하여 mutation후 캐시 업데이트하기","category":"apollo","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}