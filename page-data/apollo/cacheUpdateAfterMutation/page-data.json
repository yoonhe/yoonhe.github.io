{"componentChunkName":"component---src-templates-blog-post-js","path":"/apollo/cacheUpdateAfterMutation/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"b5d011a6-a41e-5be9-b5b5-c83f4572fe63","excerpt":"사용중인 쿼리 GET_MESSAGES 쿼리 SEND_MESSAGE…","html":"<h2 id=\"사용중인-쿼리\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%A4%91%EC%9D%B8-%EC%BF%BC%EB%A6%AC\" aria-label=\"사용중인 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용중인 쿼리</h2>\n<h3 id=\"get_messages-쿼리\" style=\"position:relative;\"><a href=\"#get_messages-%EC%BF%BC%EB%A6%AC\" aria-label=\"get_messages 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET_MESSAGES 쿼리</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">GET_MESSAGES</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query getMessages($roomId: Float!) {\n    getMessage(input: { roomId: $roomId }) {\n      error\n      success\n      messages {\n        createdAt\n        receiver {\n          id\n          firstname\n          lastname\n          images {\n            src\n          }\n        }\n        sender {\n          id\n          firstname\n          lastname\n          images {\n            src\n          }\n        }\n        text\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"send_message-뮤테이션\" style=\"position:relative;\"><a href=\"#send_message-%EB%AE%A4%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"send_message 뮤테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SEND_MESSAGE 뮤테이션</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">SEND_MESSAGES</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation sendMessage($message: String!, $roomID: Float, $receiverId: Float!) {\n    sendMessage(input: { text: $message, roomId: $roomID, receiverId: $receiverId }) {\n      success\n      error\n      sendMessage {\n        createdAt\n        receiver {\n          id\n          firstname\n          lastname\n          images {\n            src\n          }\n        }\n        sender {\n          id\n          firstname\n          lastname\n          images {\n            src\n          }\n        }\n        text\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">sendMessage</code>를 이용해 <code class=\"language-text\">mutation</code>을 한 후 다시 쿼리를 실행해 서버에 데이터를 요청하고 요청받은 데이터를 클라이언트에 받아 렌더링해주면 사용자는 <code class=\"language-text\">왜이렇게 느리지?</code>하고 불편함을 호소할 수 있다. 그러므로 아래와같이 저장된 캐시를 조작해주자,</p>\n<p>매개변수를 받는 함수들은 꼭 잊지말고 <code class=\"language-text\">variables</code>에 넣어주자.. 안넣어서 데이터를 못받아 몇시간동안 삽질을 했던 기억이… 에러도 안난다. 왜 대체 데이터가 업데이트가 안되는지 한참 의문을 품다. 매개변수를 깜박한것을 인지하고 얼른 넣어주었더니 캐시 업데이트가 잘되었다… 그러므로 매개변수가 있다면 잊지말고 꼭 넣어주자!! 필!수!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> subscribeToMore<span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> messageDatas<span class=\"token punctuation\">,</span> loading<span class=\"token operator\">:</span> messageDatasLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQuery</span><span class=\"token punctuation\">(</span>\n  <span class=\"token constant\">GET_MESSAGES</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> roomId<span class=\"token operator\">:</span> localRoomId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// GET_MESSAGES 쿼리는 매개변수로 roomID를 받는다 꼭 설정해주자</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sendMessage<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useMutation</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SEND_MESSAGES</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. 보낸 메시지를 가져온다</span>\n    <span class=\"token keyword\">const</span> newMessage <span class=\"token operator\">=</span> data<span class=\"token operator\">?.</span>sendMessage<span class=\"token operator\">?.</span>sendMessage<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> existingMessages <span class=\"token operator\">=</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">readQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 2. 현재 캐시에 저장되어있는 데이터를 가져온다.</span>\n      query<span class=\"token operator\">:</span> <span class=\"token constant\">GET_MESSAGES</span><span class=\"token punctuation\">,</span>\n      variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        roomId<span class=\"token operator\">:</span> localRoomId<span class=\"token punctuation\">,</span> <span class=\"token comment\">// GET_MESSAGES 쿼리는 매개변수로 roomID를 받는다 꼭 설정해주자! </span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newMessage <span class=\"token operator\">&amp;&amp;</span> existingMessages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cache<span class=\"token punctuation\">.</span><span class=\"token function\">writeQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 캐시 업데이트!</span>\n        query<span class=\"token operator\">:</span> <span class=\"token constant\">GET_MESSAGES</span><span class=\"token punctuation\">,</span>\n        variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          roomId<span class=\"token operator\">:</span> localRoomId<span class=\"token punctuation\">,</span> <span class=\"token comment\">// GET_MESSAGES 쿼리는 매개변수로 roomID를 받는다 꼭 설정해주자! 꼭!!!</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          getMessage<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>existingMessages<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">,</span>\n            messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>newMessage<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>existingMessages<span class=\"token punctuation\">.</span>getMessage<span class=\"token punctuation\">.</span>messages<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 3. 현재 캐시에 저장되어있는 messages에 새로운 message를 추가해준다.</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"참고글\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EA%B8%80\" aria-label=\"참고글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고글</h2>\n<ul>\n<li><a href=\"https://medium.com/humanscape-tech/apollo-client-react-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-cb019131f769\">Apollo Client(react) 알아보기</a></li>\n<li><a href=\"https://www.apollographql.com/blog/when-to-use-refetch-queries-in-apollo-client/\">When To Use Refetch Queries in Apollo Client</a></li>\n<li><a href=\"https://www.apollographql.com/docs/react/caching/cache-interaction/\">writeQuery</a></li>\n<li><a href=\"https://velog.io/@ashnamuh/Graphql-Apollo-client%EC%9D%98-fetchPolicy-%EC%98%B5%EC%85%98\">Apollo client의 fetchPolicy 옵션</a></li>\n<li><a href=\"https://velog.io/@zansol/-Apollo-client-cache-wgk3pev5on\">Apollo client cache</a></li>\n</ul>","frontmatter":{"title":"< apollo > writeQuery 사용하여 mutation후 캐시 업데이트하기","date":"February 05, 2021"}}},"pageContext":{"slug":"/apollo/cacheUpdateAfterMutation/","previous":{"fields":{"slug":"/apollo/subscribeToMore/"},"frontmatter":{"title":"< apollo > 구독후 데이터를 업데이트하는 방법","category":"apollo","draft":false}},"next":{"fields":{"slug":"/review/react_3/"},"frontmatter":{"title":"< 코드숨 > 리액트 3주차 회고","category":"review","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}