{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/생성자함수/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"6fc6ee75-2154-5936-b625-81154e2c07a2","excerpt":"프로그래머스에서 진행하는 프론트엔드 개발을 위한 자바스크립트(feat. VanillaJS 에 참여하게 되었습니다. 자바스크립트 기본기를 탄탄하게 다져보도록 하겠습니다 🔥🔥🔥 생성자 함수 생성자 함수란 new 연산자와 함께 호출하여 객체(인스턴스)를 생성하는 함수를 말한다. 생성자 함수에 의해 생성된 객체를 인스턴스라 한다. 샘플 코드 위의 코드는 아래와 같은 에러가 발생합니다 에러 발생 이유 생성자 함수를 new…","html":"<p>프로그래머스에서 진행하는 <a href=\"https://programmers.co.kr/learn/courses/12819\">프론트엔드 개발을 위한 자바스크립트(feat. VanillaJS</a> 에 참여하게 되었습니다. 자바스크립트 기본기를 탄탄하게 다져보도록 하겠습니다 🔥🔥🔥</p>\n<h2 id=\"생성자-함수\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자 함수</h2>\n<p>생성자 함수란 new 연산자와 함께 호출하여 객체(인스턴스)를 생성하는 함수를 말한다. 생성자 함수에 의해 생성된 객체를 인스턴스라 한다.</p>\n<h3 id=\"샘플-코드\" style=\"position:relative;\"><a href=\"#%EC%83%98%ED%94%8C-%EC%BD%94%EB%93%9C\" aria-label=\"샘플 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>샘플 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Food</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> pizza <span class=\"token operator\">=</span> <span class=\"token function\">Food</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pizza'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pizza<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 코드는 아래와 같은 에러가 발생합니다</p>\n<h3 id=\"에러-발생\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D\" aria-label=\"에러 발생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 발생</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">VM381:1 Uncaught TypeError: Cannot read properties of undefined (reading &#39;name&#39;)</code></pre></div>\n<h3 id=\"이유\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%9C%A0\" aria-label=\"이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이유</h3>\n<p>생성자 함수를 new 연산자와 함께 호출하지 않으면 생성자 함수가 아닌 일반 함수로서 호출됩니다. 일반 함수로 호출된 함수 내에는 반환문이 없으므로 암묵적으로 undefined를 반환합니다. 위의 코드에서 pizza 변수에는 undefined가 할당됩니다. undefined에는 name이라는 속성이 존재하지 않으므로 undefined에서 <code class=\"language-text\">name</code> 이라는 속성을 읽을 수 없다는 에러가 발생하는 것입니다.</p>\n<p>추가적으로 일반함수로 호출되었을때 this에 전역 객체 window가 바인딩됩니다.\n이러한 이유로 위의 코드에서 name는 전역객체의 프로퍼티로 등록됩니다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span>name <span class=\"token comment\">// 'pizza'</span>\nname <span class=\"token comment\">// 'pizza'</span></code></pre></div>\n<h3 id=\"해결방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95\" aria-label=\"해결방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결방법</h3>\n<p><code class=\"language-text\">new</code> 연산자와 함께 <code class=\"language-text\">Food</code> 생성자 함수를 호출하면 문제가 해결됩니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> pizza <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pizza'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pizza<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'pizza'</span></code></pre></div>\n<h3 id=\"new-연산자\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"new 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자</h3>\n<p>자바스크립트 딥다이브 도서의 <code class=\"language-text\">17.2.3</code> 부분을 참고하여 <code class=\"language-text\">new</code> 연산자와 함께 생성자 함수를 호출하면 발생하는 일을 정리해보았습니다</p>\n<ol>\n<li>암묵적으로 인스턴스 객체를 생성된다</li>\n<li>생성된 인스턴스 객체는 this에 바인딩된다</li>\n<li>this에 바인딩 되어 있는 인스턴스에 프로퍼티나 메서드를 추가한다</li>\n<li>생성자 함수가 인수로 전달받은 초기값을 인스턴스 프로퍼티에 할당하여 초기화하거나 고정값을 할당한다</li>\n<li>\n<p>인스턴스가 바인딩된 this가 암묵적으로 반환된다</p>\n<ul>\n<li>명시적으로 객체를 반환하면 암묵적인 this 반환이 무시된다</li>\n<li>명시적으로 원시값을 반환하면 원시 값 반환은 무시되고 암묵적으로 this가 반환된다</li>\n<li>생성자 함수 내부에 명시적으로 this가 아닌 다른 값을 반환하는 것은 생성자 함수의 기본 동작을 훼손하는 것이므로 생정사 함수의 내부에서는 return 문을 반드시 생략해야 한다</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"생성자함수","date":"October 16, 2021"}}},"pageContext":{"slug":"/javascript/생성자함수/","previous":{"fields":{"slug":"/til/20210512TIL/"},"frontmatter":{"title":"2021-05-12","category":"til","draft":false}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}