{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/new-연산자를-통해-함수를-호출했는지-확인하는-방법/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"addb2c21-f2b7-5c22-a428-f8c7ec258d58","excerpt":",  로 new 연산자를 통해 함수를 호출했는지 확인이 가능합니다 new.target new.target\nnew.target 속성(property)은 함수 또는 생성자가 new 연산자를 사용하여 호출됐는지를 감지할 수 있습니다. new 연산자로 인스턴스화된 생성자 및 함수에서, new.target은 생성자 또는 함수 참조를 반환합니다. 일반 함수 호출에서는, new.target은 undefined입니다.\n👉🏻 출처 - mdn ES…","html":"<p><code class=\"language-text\">new.target</code>, <code class=\"language-text\">instanceof</code> 로 new 연산자를 통해 함수를 호출했는지 확인이 가능합니다</p>\n<h2 id=\"newtarget\" style=\"position:relative;\"><a href=\"#newtarget\" aria-label=\"newtarget permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new.target</h2>\n<blockquote>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a>\nnew.target 속성(property)은 함수 또는 생성자가 new 연산자를 사용하여 호출됐는지를 감지할 수 있습니다. new 연산자로 인스턴스화된 생성자 및 함수에서, new.target은 생성자 또는 함수 참조를 반환합니다. 일반 함수 호출에서는, new.target은 undefined입니다.\n👉🏻 출처 - mdn</p>\n</blockquote>\n<p>ES6에서는 <code class=\"language-text\">new.target</code>을 지원합니다</p>\n<p>함수 내부에서 <code class=\"language-text\">new.target</code>을 사용하면 <code class=\"language-text\">new</code> 연산자와 함께 생성자 함수로서 호출되었는지를 확인할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new.target ? '</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"new-연산자와-함께-실행-했을때\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%ED%95%A8%EA%BB%98-%EC%8B%A4%ED%96%89-%ED%96%88%EC%9D%84%EB%95%8C\" aria-label=\"new 연산자와 함께 실행 했을때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자와 함께 실행 했을때</h3>\n<p>new 연산자와 함께 생성자 함수로 호출되면 <code class=\"language-text\">new.target</code>은 함수 자신을 가리킵니다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\nnew.target ?  ƒ Person(name) {\n  console.log('new.target ? ', new.target);\n\n  this.name = name;\n}\n*/</span></code></pre></div>\n<p>console.dir로 찍어보면 constructor가 Person 생성자 함수를 가리킵니다</p>\n<blockquote>\n<p>생정자 함수?\nnew 연산자와 함께 호출하여 객체(<code class=\"language-text\">인스턴스</code>)를 생성하는 함수를 말한다\n생성자 함수에 의해 생성된 객체를 <code class=\"language-text\">인스턴스</code>라 한다\n👉🏻 출처 - 자바스크립트 딥다이브 도서</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://images.velog.io/images/yhe228/post/667ab458-7dee-459d-a2ac-f946eef23e1e/image.png\"></p>\n<h3 id=\"new-연산자-없이-실행-했을때\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%97%86%EC%9D%B4-%EC%8B%A4%ED%96%89-%ED%96%88%EC%9D%84%EB%95%8C\" aria-label=\"new 연산자 없이 실행 했을때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자 없이 실행 했을때</h3>\n<p>new 연산자 없이 일반 함수로 호출되면 <code class=\"language-text\">new.target</code>은 <code class=\"language-text\">undefined</code> 입니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// new.target ?  undefined</span></code></pre></div>\n<p><code class=\"language-text\">console.dir(new.target)</code> 도 <code class=\"language-text\">undefined</code> 가 찍힙니다</p>\n<p>위와같은 특징을 사용하여 생성자 함수가 <code class=\"language-text\">new</code> 연산자 존재 여부에 따라 코드를 작성할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new 연산자 사용'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new 연산자 없음'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// new 연산자 사용</span>\n<span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// new 연산자 없음</span></code></pre></div>\n<h3 id=\"new-연산자-없이-호출된-일반-함수를-재귀호출을-통해-new-연산자와-함께-생성자-함수로-만드는-방법\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%97%86%EC%9D%B4-%ED%98%B8%EC%B6%9C%EB%90%9C-%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9E%AC%EA%B7%80%ED%98%B8%EC%B6%9C%EC%9D%84-%ED%86%B5%ED%95%B4-new-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%ED%95%A8%EA%BB%98-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"new 연산자 없이 호출된 일반 함수를 재귀호출을 통해 new 연산자와 함께 생성자 함수로 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자 없이 호출된 일반 함수를 재귀호출을 통해 new 연산자와 함께 생성자 함수로 만드는 방법</h3>\n<ol>\n<li><code class=\"language-text\">new.target</code>을 사용하여 <code class=\"language-text\">new 연산자</code>와 함께 호출되었는지를 확인한다.</li>\n<li>만약 아니라면 <code class=\"language-text\">new 연산자</code> 와 함께 생성자 함수로서 호출하고 반환한다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> malang <span class=\"token operator\">=</span> <span class=\"token function\">Cat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'malang'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>malang<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Cat {name: 'malang', age: 1}</span></code></pre></div>\n<h2 id=\"instanceof\" style=\"position:relative;\"><a href=\"#instanceof\" aria-label=\"instanceof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>instanceof</h2>\n<p><code class=\"language-text\">new.target</code>을 <code class=\"language-text\">IE</code>에서는 지원하지 않으므로 이러한 경우에는 <code class=\"language-text\">instanceof</code> 연산자를 사용하면 된다</p>\n<blockquote>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof 연산자</a>\ninstanceof 연산자는 생성자의 prototype 속성이 객체의 프로토타입 체인 어딘가 존재하는지 판별합니다.\n👉🏻 출처 - mdn</p>\n</blockquote>\n<p>생성자 함수의 this는 생성자 함수가 생성할 인스턴스를 가리키는데\n이 인스턴스의 프로토타입 체인에 Person 생성자가 있는지 확인하는 것이다 !</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new 키워드 호출'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new 키워드 없음'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"new-연산자와-함께-실행-했을때-1\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%ED%95%A8%EA%BB%98-%EC%8B%A4%ED%96%89-%ED%96%88%EC%9D%84%EB%95%8C-1\" aria-label=\"new 연산자와 함께 실행 했을때 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자와 함께 실행 했을때</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// new 키워드 호출</span></code></pre></div>\n<p><code class=\"language-text\">this</code>는 <code class=\"language-text\">Person</code> 생성자 함수를 가리킨다\n<img src=\"https://images.velog.io/images/yhe228/post/b1347a2e-1f77-45ab-883f-2cea1e283d7e/image.png\"></p>\n<h3 id=\"new-연산자-없이-실행-했을때-1\" style=\"position:relative;\"><a href=\"#new-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%97%86%EC%9D%B4-%EC%8B%A4%ED%96%89-%ED%96%88%EC%9D%84%EB%95%8C-1\" aria-label=\"new 연산자 없이 실행 했을때 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new 연산자 없이 실행 했을때</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heaeun'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">this</code>는 <code class=\"language-text\">전역객체</code>를 가리킨다\n<img src=\"https://images.velog.io/images/yhe228/post/3ba075fe-a3e9-4105-93d1-be1a155a5219/image.png\"></p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/367768/how-to-detect-if-a-function-is-called-as-constructor\">How to detect if a function is called as constructor?</a></li>\n</ul>","frontmatter":{"title":"new 연산자를 통해 함수를 호출했는지 확인하는 방법","date":"October 16, 2021"}}},"pageContext":{"slug":"/javascript/new-연산자를-통해-함수를-호출했는지-확인하는-방법/","previous":{"fields":{"slug":"/javascript/iife/"},"frontmatter":{"title":"IIFE","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/this-메서드호출/"},"frontmatter":{"title":"this - 메서드 호출","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}