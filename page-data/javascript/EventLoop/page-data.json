{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/EventLoop/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"f5578829-2503-58ce-abcd-c2dead12e057","excerpt":"자바스크립트 엔진 자바스크립트 엔진의 대표적인 예는 Google V8 엔진이다. V8 은 Chrome과 Node.js에서 사용한다. 엔진의 주요 두 구성요소 Memory Heap : 메모리 할당이 일어나는 곳 Call Stack : 코드 실행에 따라 호출 스택이 쌓이는 곳\nScreenshot from 2020-02-01 14-17-57.png 이미지 출처 : 캡틴판교 블로그 자바스크립트 런타임 Screenshot from 2020-02-01 14-21-12.png   Web API…","html":"<h2 id=\"자바스크립트-엔진\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%97%94%EC%A7%84\" aria-label=\"자바스크립트 엔진 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 엔진</h2>\n<ul>\n<li>자바스크립트 엔진의 대표적인 예는 Google V8 엔진이다.</li>\n<li>V8 은 Chrome과 Node.js에서 사용한다.</li>\n<li>\n<p>엔진의 주요 두 구성요소</p>\n<ul>\n<li>Memory Heap : 메모리 할당이 일어나는 곳</li>\n<li>Call Stack : 코드 실행에 따라 호출 스택이 쌓이는 곳\n<img src=\"https://images.velog.io/post-images/yhe228/468a5600-44b2-11ea-b0c8-f5027889152a/Screenshot-from-2020-02-01-14-17-57.png\" alt=\"Screenshot from 2020-02-01 14-17-57.png\"><br>\n[이미지 출처 : 캡틴판교 블로그]</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"자바스크립트-런타임\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%9F%B0%ED%83%80%EC%9E%84\" aria-label=\"자바스크립트 런타임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 런타임</h2>\n<p><img src=\"https://images.velog.io/post-images/yhe228/c2219670-44b2-11ea-856e-a145bb1d5c1d/Screenshot-from-2020-02-01-14-21-12.png\" alt=\"Screenshot from 2020-02-01 14-21-12.png\">  </p>\n<h3 id=\"web-api\" style=\"position:relative;\"><a href=\"#web-api\" aria-label=\"web api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web API</h3>\n<ul>\n<li>javascript가 실행되는 런타임 환경에 존재하는 별도의 API이다</li>\n<li>DOM, Ajax, setTimeout 과같이 브라우저에서 제공하는 API 들을 Web API라고 한다.</li>\n<li>브라우저에서 제공하는 API는 자바스크립트에서 호출할 수 있는 스레드를 효과적으로 지원한다.</li>\n<li>Web API는 작동이 완료되면 콜백을 테스크 큐에 밀어 넣는다.</li>\n</ul>\n<h2 id=\"호출스택call-stack이-하는-일\" style=\"position:relative;\"><a href=\"#%ED%98%B8%EC%B6%9C%EC%8A%A4%ED%83%9Dcall-stack%EC%9D%B4-%ED%95%98%EB%8A%94-%EC%9D%BC\" aria-label=\"호출스택call stack이 하는 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>호출스택(Call Stack)이 하는 일</h2>\n<ul>\n<li>\n<p>자바스크립트는 기본적으로 싱글 쓰레드 기반 언어이다. </p>\n<ul>\n<li>싱글 쓰레드  : 호출 스택이 하나이기 때문에 한 번에 한 작업만 처리할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>Stack의 역할    </p>\n<ol>\n<li>함수를 실행하면 스택에 해당 함수를 집어넣는다</li>\n<li>함수의 실행이 끝날 때(리턴 값을 돌려줄 때) 스택의 가장 위쪽에서 해당 함수를 꺼낸다 => 해당 함수는 호출 스택에서 제거된다.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"동시성concurrency--이벤트-루프event-loop\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1concurrency--%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84event-loop\" aria-label=\"동시성concurrency  이벤트 루프event loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동시성(Concurrency) &#x26; 이벤트 루프(Event Loop)</h2>\n<p>호출 스택에 처리 시간이 오래걸리는 함수가 있을 경우,\n호출 스택에서 해당 함수가 실행되는 동안 브라우저는 아무 작업도 못하고 대기 상태가 된다. 이렇게되면\n브라우저는 페이지를 그리지도 못하고, 어느 코드도 실행을 못하는 상태가 된다.</p>\n<ul>\n<li>\n<p>콜스택에 어떠한 것들이 남아있으면 동기적으로 실행되는 네크워크 요청이 콜스택을 <code class=\"language-text\">blocking</code>하여 브라우저는 다른 일들을 할 수 없다. 렌더링이나 다른 코드를 실행하지 못하고 그냥 멈춰버린다.</p>\n<ul>\n<li>blocking : 느린코드가 스택에 남아있는것</li>\n</ul>\n</li>\n<li><code class=\"language-text\">비동기 콜백</code>을 사용하면 페이지 렌더링 동작을 방해하지 않고 브라우저의 응답도 끊지 않으면서 연산량이 많은 코드를 실행할 수 있다.\n</li>\n</ul>\n<blockquote>\n<p>스택에 필요없는 느린 코드를 쌓아서 브라우저가 할일을 못하게 만들지 말아라, 유동적인 UI를 만들어라</p>\n</blockquote>\n<h2 id=\"이벤트루프의-역할\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A3%A8%ED%94%84%EC%9D%98-%EC%97%AD%ED%95%A0\" aria-label=\"이벤트루프의 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트루프의 역할?</h2>\n<ul>\n<li>콜스택과 테스크 큐를 주시하는 것</li>\n<li>스택이 비어있으면 큐의 첫번째 콜백을 스택에 쌓아 효과적으로 실행할 수 있게 해준다.    </li>\n<li>\n<p>아래의 코드처럼 0초뒤에 함수를 실행하는 코드를 작성하는 이유는?</p>\n<ul>\n<li>\n<p>스택이 비어있을때까지 기다리게 하기 위해서</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"콜백\" style=\"position:relative;\"><a href=\"#%EC%BD%9C%EB%B0%B1\" aria-label=\"콜백 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백</h2>\n<ul>\n<li>다른함수가 부르는 함수\t</li>\n<li>앞으로 큐에 쌓일 비동기식 콜백</li>\n</ul>\n<h2 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h2>\n<ul>\n<li><a href=\"https://youtu.be/8aGhZQkoFbQ\">참고영상 - 어쨌든 이벤트 루프는 무엇입니까? | Philip Roberts | JSConf EU</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/translation/javascript/how-js-works-inside-engine/\">참고블로그 - (Captain Pangyo) 자바스크립트의 동작원리: 엔진, 런타임, 호출 스택</a> </li>\n<li><a href=\"https://velog.io/@wan088/JavaScript-EventLoop%EC%99%80-%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%8F%99%EC%9E%91\">참고블로그 - 2</a></li>\n</ul>","frontmatter":{"title":"Event Loop?","date":"February 01, 2020"}}},"pageContext":{"slug":"/javascript/EventLoop/","previous":{"fields":{"slug":"/javascript/API/"},"frontmatter":{"title":"API란?","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/nodeJS/"},"frontmatter":{"title":"nodeJS","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}