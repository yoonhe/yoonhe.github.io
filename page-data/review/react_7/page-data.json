{"componentChunkName":"component---src-templates-blog-post-js","path":"/review/react_7/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"d07adacb-cbf0-53f8-9a37-04ddb40b8627","excerpt":"한것 로그인 폼 구현 레스토랑  리뷰 폼 구현 레스토랑 리뷰 리스트 구현 느낀것 강의 듣느라 이번주 2일은 코드리뷰를 못받았다 ㅜㅜ 코드리뷰 받을 기회를 날려버려 너무 아쉽고 속상했다 ㅜㅜㅜㅜ 나의 소중한 리뷰시간…  일주일이 정말 금방 간다.. 6시에 퇴근하고 저녁먹으면 7시… 9시까지 과제를 제출하기 위해 폭풍 코딩..! 시간이 너무 부족하다 ㅜㅜ 일안하고 과제에만 집중하고싶다는 생각이… ㅎㅎㅎㅎㅎㅎㅎ  이번주에 api…","html":"<h2 id=\"한것\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B2%83\" aria-label=\"한것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한것</h2>\n<ul>\n<li>로그인 폼 구현</li>\n<li>\n<p>레스토랑 </p>\n<ul>\n<li>리뷰 폼 구현</li>\n<li>레스토랑 리뷰 리스트 구현</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"느낀것\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EA%B2%83\" aria-label=\"느낀것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀것</h2>\n<ul>\n<li>강의 듣느라 이번주 2일은 코드리뷰를 못받았다 ㅜㅜ 코드리뷰 받을 기회를 날려버려 너무 아쉽고 속상했다 ㅜㅜㅜㅜ 나의 소중한 리뷰시간… </li>\n<li>일주일이 정말 금방 간다.. 6시에 퇴근하고 저녁먹으면 7시… 9시까지 과제를 제출하기 위해 폭풍 코딩..! 시간이 너무 부족하다 ㅜㅜ 일안하고 과제에만 집중하고싶다는 생각이… ㅎㅎㅎㅎㅎㅎㅎ </li>\n<li>이번주에 api 핸들링을 테스트하는 방법을 모르겠어서 구글링을 통해 먼저 시도해보고 그래도 잘모르겠어서 리뷰어님께 질문을 했다. 질문할 내용을 정리하는 과정에서는 내가 현재 모르는것, 시도해본 것, 구현하고자 하는 것에 대해 정리할 시간을 가질 수 있어 좋았고, 질문을 통해 잘못알고 있는 지식에 대한 답변도 받을 수 있어 너무 너무 좋았다. </li>\n<li>다른분들 회고글을 보니 메타인지를 체크하는 내용들이 많이 보인다. 앞으로 내가 뭘 모르고, 뭔가를 알게되었는지에 대해 인지하고 기록해야겠다 </li>\n</ul>\n<h2 id=\"배운것\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EA%B2%83\" aria-label=\"배운것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운것</h2>\n<ul>\n<li>중복이 없고, 확장 가능한 코드를 작성하려고 노력하자, 셀프 코드 리뷰 필!수!</li>\n<li>값이 재사용 되거나 의도를 더 드러내고 싶을 경우에는 상수로 추출해주는게 좋다(<a href=\"https://refactoring.com/catalog/replaceMagicLiteral.html\">Magic Literal</a>)</li>\n<li>액션을 테스트할때는 액션 생성 함수를 사용하기보다 액션 객체 배열 자체를 드러내서 표현하면 무슨 일이 벌어지는지 더 알기 쉬워진다</li>\n<li>httpie 사용법(포스트맨을 사용하지 않아도 터미널에서 api 요청 및 결과값을 확인할 수 있다)</li>\n<li>인증과 인가의 차이점</li>\n<li>fetch 사용 방법(get, post)</li>\n<li>localStorage 테스트하는 방법</li>\n<li>구체적인 구현을 테스트하기 보다 어떠한 일이 발생하는지를 테스트 케이스에 나타내야한다</li>\n<li>테스트를 코드의 예제라고 생각하고 누군가에게 이 코드를 어떻게 사용하는 것인지 예제를 보여준다고 생각하고 작성해야한다</li>\n<li>커버리지 100%를 위해 모든 테스트를 작성하는것보다, 보다 근본적으로 이 테스트를이 왜 필요한지를 고민해보자</li>\n<li>🥺 테스트를 작성할 때는 모든게 올바르게 동작하는 경우인 <code class=\"language-text\">Happy path</code>를 먼저 작성한 후 예외 케이스를 단계적으로 구현하는 것이 좋다. 처음부터 너무 많은 기능을 생각하거나 이것저것 예외케이스를 생각하다보면 복잡성 압도당하여 코딩을 시작하기가 어려워진다.</li>\n<li><code class=\"language-text\">HTTP Statue Code</code>가 <code class=\"language-text\">404</code> 또는 <code class=\"language-text\">500</code>을 반환하더라도 fetch()로 부터 반환된 <code class=\"language-text\">Promise</code> 객체는 HTTP error 상태를 <code class=\"language-text\">reject</code>하지 않는다. 대신 <code class=\"language-text\">ok</code> 상태가 <code class=\"language-text\">false</code>인 <code class=\"language-text\">resolve</code>가 반환된다. 네트워크 장애나 요청이 완료되지 못한 상태에는 reject가 반환된다. 그러므로 \t\t<code class=\"language-text\">404</code> 또는 <code class=\"language-text\">500</code> 일 경우에는 <code class=\"language-text\">ok</code> 값을 사용해 에러 핸들링을 해줄 수 있다.(<a href=\"https://developer.mozilla.org/ko/docs/Web/API/Fetch_API/Using_Fetch\">참고글</a>, <a href=\"https://github.com/CodeSoom/react-week7-assignment-1/pull/46#issuecomment-798913468\">관련 리뷰글</a>)</li>\n</ul>","frontmatter":{"title":"< 코드숨 > 리액트 7주차 회고","date":"March 15, 2021"}}},"pageContext":{"slug":"/review/react_7/","previous":{"fields":{"slug":"/review/react_6/"},"frontmatter":{"title":"< 코드숨 > 리액트 6주차 회고","category":"review","draft":false}},"next":{"fields":{"slug":"/review/react_8/"},"frontmatter":{"title":"< 코드숨 > 리액트 8주차 회고","category":"review","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}