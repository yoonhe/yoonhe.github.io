{"componentChunkName":"component---src-templates-blog-post-js","path":"/review/react_2/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"5de92ae1-ed1f-5247-af83-04b62589a154","excerpt":"…","html":"<h2 id=\"한-것\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EA%B2%83\" aria-label=\"한 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 것</h2>\n<ol>\n<li>카운터앱 만들기</li>\n<li>투두 앱 만들기</li>\n</ol>\n<h2 id=\"느낀것\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EA%B2%83\" aria-label=\"느낀것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀것</h2>\n<ul>\n<li>관심사의 분리라는 개념이 처음에는 어렵게 느껴졌지만 계속 시도해보고 코드리뷰를 받다보니 처음보다는 어떤것을 의미하는지 알것같다. 뭔가 공장같기도 하다. 서로 할일을 나눠서 그 할일에만 집중하는듯한?.. 내가 약통에 약을 채워서 보내면 너는 포장만해 너는 약이 몇개 들었는지 알필요없어😅 이런 느낌?..</li>\n<li><code class=\"language-text\">App</code>에서 상태만 관리하고 자식컴포넌트들은 상태를 받아 그리는데만 집중하니 상태값이 뭔가 추가가되도 <code class=\"language-text\">App</code>에서만 수정하면 되니 훨씬 효율적인것 같다. 뭔가 에러가 났을때 컴포넌트의 연결관계를 파악할 필요없이 상태를 관리하는 <code class=\"language-text\">App</code>만 확인하면 되니 에러를 잡을때도 좋은것 같다!</li>\n<li>질문을 많이할수록 뭔가 내가 얻어가는게 많은 것 같다. 다른 수강생 분들 코드리뷰도 계속 참고하면서 이해가 안가는 부분에대해 질문을 하니 내가 놓쳤던 부분에 대해서도 새로 알게되어 너무 좋다. 피드포워드를 받았을때 <code class=\"language-text\">수정할게요</code>로 끝내지말고 이해가 안가는 부분이 있다면 반드시 한번더 질문을 해야겠다.</li>\n<li>슬랙에 질문글을 한번 올려보았는데 좋은 답변들을 많이 받았다. 앞으로도 궁금한게 있을때 질문을 잘 정리해서 슬랙에 올려보아야겠다 ㅎㅎ </li>\n</ul>\n<h2 id=\"배운것\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EA%B2%83\" aria-label=\"배운것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운것</h2>\n<ul>\n<li>export한 모듈을 import를 이용해 가져올때 확장자를 생략하는 방법</li>\n<li>비지니스 로직의 관심사는 상태와 상태를 관리하는 함수이고, UI로직의 관심사는 받은 것을 그리는 것이다.</li>\n<li><code class=\"language-text\">내가 하는 행위가 어떤 결과를 불러오는지 정확히 알고 진행</code>해야 한다. 그냥 무작정 분리하지말고 <code class=\"language-text\">왜</code> 컴포넌트를 분리하는지, 분리했을때 <code class=\"language-text\">장, 단점</code>이 무엇인지에 대해 생각해보고 상황에 맞게 분리해야된다</li>\n<li><code class=\"language-text\">하나의 모듈</code>은 <code class=\"language-text\">하나의 책임</code>을 가져야 한다 - SRP(단일책임원칙)</li>\n<li>컴포넌트를 <code class=\"language-text\">props</code>로 넘길 수 있다.</li>\n<li><code class=\"language-text\">&amp;&amp;</code>는 결과를 불분명하게 만들 위험이 있다</li>\n<li><code class=\"language-text\">setState</code> 자체를 자식컴포넌트에 넘기게 되면 상태 값이 어디서 어떻게 변경되는지 예측이 안되므로 우리가 <code class=\"language-text\">의도한대로</code> 변경이 될 수 있게 핸들러 함수를 만들어서 전달하자</li>\n<li>핸들러 네이밍은 <code class=\"language-text\">handle</code> 접두사를 사용한다(handleEvent, handleSubjectEvent), 핸들러를 <code class=\"language-text\">props</code>로 받을땐 <code class=\"language-text\">on</code> 접두사를 사용한다(onEvent, onSubjectEvent) => 이렇게 설정하면 이벤트 핸들러 역할을 한다는 의도를 드러낼 수 있다.</li>\n<li>컴포넌트가 <code class=\"language-text\">범용적</code>으로 만들어질수록 <code class=\"language-text\">구조</code>가 <code class=\"language-text\">단순</code>해지고 <code class=\"language-text\">재사용성</code>이 <code class=\"language-text\">높아진다</code></li>\n<li>관심사가 잘 분리되어있으면 구조와 코드를 읽기가 훨씬 좋아진다</li>\n</ul>","frontmatter":{"title":"< 코드숨 > 리액트 2주차 회고","date":"January 31, 2021"}}},"pageContext":{"slug":"/review/react_2/","previous":{"fields":{"slug":"/review/react_1/"},"frontmatter":{"title":"< 코드숨 > 리액트 1주차 회고","category":"review","draft":false}},"next":{"fields":{"slug":"/apollo/subscribeToMore/"},"frontmatter":{"title":"< apollo > 구독후 데이터를 업데이트하는 방법","category":"apollo","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}