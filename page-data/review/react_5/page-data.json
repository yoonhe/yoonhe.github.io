{"componentChunkName":"component---src-templates-blog-post-js","path":"/review/react_5/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"0b5c3312-70cd-5260-8861-1d4661777edd","excerpt":"…","html":"<h2 id=\"한것\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B2%83\" aria-label=\"한것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한것</h2>\n<ul>\n<li><code class=\"language-text\">redux-thunk</code>사용하여 비동기 액션 실행하기</li>\n<li><code class=\"language-text\">redux-mock-store</code>를 사요하여<code class=\"language-text\">redux-thunk</code> 테스트하기</li>\n<li><code class=\"language-text\">api</code> 호출 함수 테스트 코드 작성하기</li>\n<li><code class=\"language-text\">reducer</code>를 <code class=\"language-text\">if</code>나 <code class=\"language-text\">switch</code>를 사용하지 않고 <code class=\"language-text\">lookup table pattern</code>을 이용해 구현하기</li>\n<li><code class=\"language-text\">given2</code> 라이브러리 사용하여 테스트코드에서 반복되는 부분 리팩토링하기</li>\n</ul>\n<h2 id=\"느낀것\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EA%B2%83\" aria-label=\"느낀것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀것</h2>\n<ul>\n<li><code class=\"language-text\">api</code>를 어떻게 요청해야하는지를 확실하게 알고 사용해야겠다. 무작정 가져다 쓰다보니 잘못된 방법으로 요청해서 코드를 싹 바꿨다..</li>\n<li>그동안 비동기 요청에 대한 테스트를 대체 어디까지 진행해야하나 막막했는데 이번 시간을 통해 <code class=\"language-text\">api</code> 요청은 프론트에 관심사가 아니므로 <code class=\"language-text\">mocking</code> 해주면 된다는 것을 알게되어 너무 행복했다. 데드라인의 중요성..</li>\n<li>앞으로 <code class=\"language-text\">given2</code>를 자주 사용해야겠다. 중복되는 코드를 없애주니 너무 좋다.</li>\n<li>질문을 잘 정리해서 해야겠다. 아홉시에 과제를 제출해야된다는 생각에 너무 급하게 질문을 써내려가다보니.. 너무 바보같은 질문이 많았던것 같다. 리뷰어님 죄송합니다.. 앞으로 여유를 가지고 정리를 잘해서 질문해야겠다.</li>\n<li>처음 <code class=\"language-text\">TDD</code>를 접했을때는 손도 대지 못하는 상황이라 울고싶었는데.. 지금은 그래도 손은 대는거같아.. 조금 뿌듯하다.. 아직 갈길이 멀지만 ㅎㅎㅎ 지금보다 더더 <code class=\"language-text\">TDD</code>에 익숙해지는 내가 되었으면 좋겠다.</li>\n</ul>\n<h2 id=\"배운것\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EA%B2%83\" aria-label=\"배운것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운것</h2>\n<ul>\n<li>App 컴포넌트 테스트는 어느정도는 유닛 테스트로 커버하고, 나머지는 <code class=\"language-text\">E2E</code>로 커버하자</li>\n<li><code class=\"language-text\">API</code>를 프론트에서 테스트할 필요는 없다. <code class=\"language-text\">API</code> 함수는 <code class=\"language-text\">mocking</code>하고 <code class=\"language-text\">action</code>이 잘 실행되는지에 관심을 가져야한다</li>\n<li><code class=\"language-text\">redux thunk middleware</code>는 <code class=\"language-text\">Action creator</code>가 액션을 반환하는 대신에 함수를 반환한다. 첫번째 파라미터로는 <code class=\"language-text\">dispatch</code>를 받고 두번째 파라미터로는 <code class=\"language-text\">getState</code>를 받게되는데 <code class=\"language-text\">getState</code>를 이용해 현재 상태를 가져올 수 있다.</li>\n<li><code class=\"language-text\">redux thunk</code>를 사용하려면 스토어를 만들때 두번째 인자로 미들웨어에 등록해야한다.=> <code class=\"language-text\">createStore(reducer, applyMiddleware(thunk));</code></li>\n<li><code class=\"language-text\">given2</code>를 사용하면 테스트코드 작성시 반복되는 부분을 줄일 수 있다.</li>\n<li><code class=\"language-text\">fetch</code> 함수를 <code class=\"language-text\">mocking</code>하는 방법(<code class=\"language-text\">global.fetch</code> 조작, <code class=\"language-text\">fetch-mock</code> 사용)</li>\n<li><code class=\"language-text\">redux-thunk</code> 테스트하는 방법 => <a href=\"https://github.com/reduxjs/redux-mock-store\">https://github.com/reduxjs/redux-mock-store</a></li>\n<li><code class=\"language-text\">useEffect</code>에서 여러개의 <code class=\"language-text\">dispatch</code>를 실행시켜야할 경우 <code class=\"language-text\">dispatch</code>의 실행 횟수를 테스트하게되는데 <code class=\"language-text\">dispatch</code>가 추가될때마다 횟수를 변경해줘야하므로 여러개의 <code class=\"language-text\">dispatch</code>를 하나의 <code class=\"language-text\">dispatch</code>로 처리 가능하도록 하나로 묶어주자</li>\n<li><code class=\"language-text\">jest</code>의 <code class=\"language-text\">mockResvoledValue</code> 함수를 이용해 <code class=\"language-text\">mocking</code>한 비동기 함수의 반환값을 조작해줄 수 있다.</li>\n<li>상태 중심이 아니라 액션 중심으로 사고하는것이 더 좋다. 액션이 전달되는 것이 중요하다. <code class=\"language-text\">Flux</code> 아키텍처를 중심으로 <code class=\"language-text\">UI</code>와 상태관리 로직을 완전히 분리하자, <code class=\"language-text\">Redux</code>를 앱 본체라 생각하고 <code class=\"language-text\">React</code>를 <code class=\"language-text\">Redux</code>에 딸린 덤이라고 생각하면 훨씬 좋은 프로그램이 될것이다.</li>\n</ul>\n<h2 id=\"반성\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%84%B1\" aria-label=\"반성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반성</h2>\n<ul>\n<li>연휴와 생일파티로 마음이 들떠 회고도 늦고 풀이영상도 조금 늦게봤습니다.. 반성합니다.. 늘 한결같은 마음가짐을 가지도록 하겠습니다 ㅎㅎ</li>\n<li>이번주 질문이 너무 적었던것 같습니다. 좀더 적극적으로 질문하도록 하겠습니다!</li>\n</ul>","frontmatter":{"title":"< 코드숨 > 리액트 5주차 회고","date":"March 01, 2021"}}},"pageContext":{"slug":"/review/react_5/","previous":{"fields":{"slug":"/review/react_4/"},"frontmatter":{"title":"< 코드숨 > 리액트 4주차 회고","category":"review","draft":false}},"next":{"fields":{"slug":"/review/react_6/"},"frontmatter":{"title":"< 코드숨 > 리액트 6주차 회고","category":"review","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}