{"componentChunkName":"component---src-templates-blog-post-js","path":"/review/react_8/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"38d2bf03-5d3c-5004-b00b-58b85571248f","excerpt":"한 일 Redux toolkit을 사용하여 중복 코드 제거하기 Emotion을 이용하여 꾸미기 UseCallback을 이용하여 성능 최적화하기 React.memo를 이용해서 성능 최적화하기 느낀것 css 작성시 그룹핑을 해주니 훨씬 스타일 파악이 쉽다 그동안 lookup table 형식으로 reducer를 만들고, action 생성자 함수를 만들고 했던것이 모두 redudx-toolkit의 소중함을 알게하기위한 트레이너분들의 큰그림이였다는것을 알게되었다.. redux-toolkit…","html":"<h2 id=\"한-일\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%9D%BC\" aria-label=\"한 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 일</h2>\n<ul>\n<li>Redux toolkit을 사용하여 중복 코드 제거하기</li>\n<li>Emotion을 이용하여 꾸미기</li>\n<li>UseCallback을 이용하여 성능 최적화하기</li>\n<li>React.memo를 이용해서 성능 최적화하기</li>\n</ul>\n<h2 id=\"느낀것\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EA%B2%83\" aria-label=\"느낀것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀것</h2>\n<ul>\n<li>css 작성시 그룹핑을 해주니 훨씬 스타일 파악이 쉽다</li>\n<li>그동안 lookup table 형식으로 reducer를 만들고, action 생성자 함수를 만들고 했던것이 모두 redudx-toolkit의 소중함을 알게하기위한 트레이너분들의 큰그림이였다는것을 알게되었다.. redux-toolkit 최고..!</li>\n<li>정신없게 하루가 지나간다 일주일이 너무 빨리간다.. ㅎㅎㅎㅎ</li>\n</ul>\n<h2 id=\"배운것\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EA%B2%83\" aria-label=\"배운것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운것</h2>\n<ul>\n<li>\n<p>emotions 사용법</p>\n<ul>\n<li><code class=\"language-text\">Global</code> 컴포넌트를 사용해 initial css를 사용하는 방법</li>\n<li>emotions 컴포넌트 안에서 animation을 위한 keyframes 사용법</li>\n</ul>\n</li>\n<li>\n<p>스타일드 컴포넌트를 범용적으로 사용할 경우 하나의 파일로 빼주고 나머지는 각각의 리액트 컴포넌트 파일 상단에서 스타일드 컴포넌트를 관리한다</p>\n<ul>\n<li>Input을 관리하는 컴포넌트인 경우에 스타일드 컴포넌트의 리렌더링때문에 글자를 입력할때마다 포커스가 잃게된다.</li>\n<li>사람은 위에서 아래로 코드를 읽기 때문에 선언부가 구현부 보다 위에 있는게 자연스럽다</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">왜</code> 이 작업을 했는지 커밋 메시지에 충분히 드러나야한다, 변화된 내용은 <code class=\"language-text\">file changes</code>를 통해 파악할 수 있으므로 메시지에는 적지 않는다.</p>\n<ul>\n<li>예시 ) css를 수정하였을 경우, 마진과 패딩을 잡아준 것은 중요하지 않다. 이런것들은 file changes를 통해 확인하게는게 더 빠르다. 중요한건 마진과 패딩을 왜 잡아줬느냐이다. 마진과 패딩을 잡은 이유에는 UI 개선(겹쳐서, 가독성이 안좋아서 등등)이 있다.</li>\n</ul>\n</li>\n<li>CSS를 속성을 그룹핑해주면 스타일을 파악하기가 쉬워진다 - <a href=\"https://shylog.com/how-do-you-order-your-CSS-properties/\">참고</a></li>\n<li>redix-toolkit에서 제공하는 <code class=\"language-text\">configureStore</code>과 함께 <code class=\"language-text\">redux-mock-store</code>를 사용하는 방법(getDefaultMiddleware 사용)</li>\n</ul>","frontmatter":{"title":"< 코드숨 > 리액트 8주차 회고","date":"March 24, 2021"}}},"pageContext":{"slug":"/review/react_8/","previous":{"fields":{"slug":"/review/react_7/"},"frontmatter":{"title":"< 코드숨 > 리액트 7주차 회고","category":"review","draft":false}},"next":{"fields":{"slug":"/review/react_9/"},"frontmatter":{"title":"< 코드숨 > 리액트 9주차 회고(개인 프로젝트 1주차)","category":"review","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}