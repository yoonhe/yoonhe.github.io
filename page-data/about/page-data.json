{"componentChunkName":"component---src-pages-about-js","path":"/about/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"8ebabf04-dd9e-52ea-80dc-05d2cd122bf7","excerpt":"💁‍♀️ 오늘 알게된 사실   객체에 새로운 값을 설정해 주면 현재 참조하고 있던 주소값은 제거되고 다른 reference type을 가리키게 된다. 3번 - After the following code runs, what will be the value of x.foo? 👉🏻 x…","html":"<p>💁‍♀️ 오늘 알게된 사실  </p>\n<ul>\n<li>객체에 새로운 값을 설정해 주면 현재 참조하고 있던 주소값은 제거되고 다른 reference type을 가리키게 된다.</li>\n</ul>\n<p><strong>3번 - After the following code runs, what will be the value of x.foo?</strong><br>\n👉🏻 x.foo === 3</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>4번 - After the following code runs, what will be the value of myArray?</strong>\n👉🏻 myArray === [2, 3, 4, 5]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ourArray <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">;</span>\nourArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>5번 - After the following code runs, what will be the value of myArray?</strong><br>\n👉🏻 myArray === [2, 3, 4, 5]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ourArray <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">;</span>\nourArray<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\nourArray <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>7번 - After the following code runs, what will be the value of myArray?</strong><br>\n👉🏻 myArray === [2, 3, 4, 5]</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>8번 - After the following code runs, what will be the value of player.score?</strong><br>\n👉🏻 player.score === 2 </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> score<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  obj<span class=\"token punctuation\">.</span>score <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  obj <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>9번 - After the following code runs, what will be the value of player?</strong><br>\n👉🏻 player === undefined</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> score<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nplayer <span class=\"token operator\">=</span> <span class=\"token function\">doStuff</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Checkpoints 09 TIL","date":null,"lang":null}}},{"node":{"id":"9d3cf262-6f32-57c0-b0f9-b3ec38604bc8","excerpt":"8번 - After the following code runs, what will be the value of result? 나는 처음에 위의 코드에서 에러가 나는 이유가 객체는 자신의 key, value를 참조할 수 없기때문에 에서 에러가 난다고 생각했다. 확실한 이해를 위해 help…","html":"<p>8번 - After the following code runs, what will be the value of result?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  y<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span>\n  z<span class=\"token operator\">:</span> obj<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span></code></pre></div>\n<p>나는 처음에 위의 코드에서 에러가 나는 이유가 객체는 자신의 key, value를 참조할 수 없기때문에 <code class=\"language-text\">z: obj.y + 1</code>에서 에러가 난다고 생각했다.<br>\n확실한 이해를 위해 help desk에 질문을 올렸고 내가 잘못 이해하고 있었다는 사실을 알게되었다😂</p>\n<p>obj.z의 value로서 <code class=\"language-text\">obj.y</code>가 참조되는 시점에서 obj가 정의된 상태가 아니기때문에 에러가 났던 것이였다..  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  y<span class=\"token operator\">:</span> x\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\nobj <span class=\"token comment\">// {y: 10, z: 11}</span></code></pre></div>\n<p>obj를 정의해주고 obj.z의 value로 <code class=\"language-text\">obj.y</code>를 참조하면 에러가 발생하지 않고 잘 실행된다.  </p>\n<p>잘못이해하고 넘길뻔 했던 문제를 확실하게 짚고 넘어가서 정말 다행이다.</p>","frontmatter":{"title":"Checkpoints 10 - 8 문제 해결 TIL","date":null,"lang":null}}},{"node":{"id":"ff5e1785-258c-5b6f-8db3-acdd76564ae5","excerpt":"jest Matcher 함수 toEqual(value), toBe(value) toEqual : 원본배열이 아니어도 속성 값이 같으면 테스트 통과 toBe : 원본배열과 같은 주소를 참조하여야 테스트 통과 toBeTruthy(), toBeFalsy() toBeTruthy…","html":"<h2 id=\"jest-matcher-함수\" style=\"position:relative;\"><a href=\"#jest-matcher-%ED%95%A8%EC%88%98\" aria-label=\"jest matcher 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jest Matcher 함수</h2>\n<h3 id=\"toequalvalue-tobevalue\" style=\"position:relative;\"><a href=\"#toequalvalue-tobevalue\" aria-label=\"toequalvalue tobevalue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toEqual(value), toBe(value)</h3>\n<ol>\n<li>toEqual : 원본배열이 아니어도 속성 값이 같으면 테스트 통과</li>\n<li>toBe : 원본배열과 같은 주소를 참조하여야 테스트 통과</li>\n</ol>\n<h3 id=\"tobetruthy-tobefalsy\" style=\"position:relative;\"><a href=\"#tobetruthy-tobefalsy\" aria-label=\"tobetruthy tobefalsy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toBeTruthy(), toBeFalsy()</h3>\n<ol>\n<li>toBeTruthy() ➡ 검증 대상이 true인 경우 테스트 통과</li>\n<li>toBeFalsy() ➡ 검증 대상이 false인 경우 테스트 통과</li>\n<li><a href=\"https://www.daleseo.com/jest-basic/\">참고글</a></li>\n</ol>","frontmatter":{"title":"jest Matcher 함수","date":null,"lang":null}}},{"node":{"id":"baebb4fa-61a0-54c6-a3dc-3d3154efc2de","excerpt":"jest.fn() jest는 mock 기능을 지원한다.   mocking이란? 단위 테스트를 작성할 때, 해당 코드가 의존하는 부분을 가짜(mock)로 대체하는 기법이다. mocking…","html":"<h2 id=\"jestfn\" style=\"position:relative;\"><a href=\"#jestfn\" aria-label=\"jestfn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jest.fn()</h2>\n<p>jest는 mock 기능을 지원한다.  </p>\n<ol>\n<li>mocking이란?</li>\n<li>단위 테스트를 작성할 때, 해당 코드가 의존하는 부분을 가짜(mock)로 대체하는 기법이다.</li>\n<li>mocking은 이러한 상황에서 실제 객체인 척하는 가짜 객체를 생성하는 매커니즘을 제공</li>\n<li>테스트가 실행되는 동안 가짜 객체에 어떤 일들이 발생했는지를 기억하기 때문에 가짜 객체가 내부적으로 어떻게 사용되는지 검증할 수 있다.</li>\n<li>mocking을 이용하면 실제 객체를 사용하는 것보다 훨씬 가볍고 빠르게 실행되면서도, 항상 동일한 결과를 내는 테스트를 작성할 수 있다.</li>\n</ol>\n<p>Jset는 가짜 함수(mock functiton)를 생성할 수 있도록 jest.fn() 함수를 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mockFn <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>가짜 함수는 자신이 어떻게 호출되었는지를 모두 기억한다.<br>\n그래서 테스트를 작성할 때 가짜 함수가 유용하다..!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">mockFn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mockFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeCalledTimes</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockFn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeCalledWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://www.daleseo.com/jest-fn-spy-on/\">참고 사이트 링크</a></p>","frontmatter":{"title":"jest.fn()","date":null,"lang":null}}},{"node":{"id":"c0a698e9-0ee2-5367-866d-d45aad814aaa","excerpt":"Your name Thank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"your-name\" style=\"position:relative;\"><a href=\"#your-name\" aria-label=\"your name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}}]}},"pageContext":{}},"staticQueryHashes":[]}