{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/20191220TIL/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"f5ac4b7e-11db-5fd5-83a3-f1ec35dc7954","excerpt":"오늘 해야 할 일 영상 및 슬라이드 시청, TIL - , constructor, prototype, Object.create, ES6 class, super ES6 Syntax 슬라이드 보기 느낀점 오늘 첫번째로는 Advanced Data Structures reference 분석하면서 내 코드와 비교하는 시간을 가졌다. reference 코드와 내 코드를 비교해보니 내 코드에서 개선해야 할 점들이 많이 보였다. ,  연산자를 이용해 if문을 좀 줄여볼 필요가 있다고 느꼈고, recursion…","html":"<h2 id=\"오늘-해야-할-일\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98-%ED%95%B4%EC%95%BC-%ED%95%A0-%EC%9D%BC\" aria-label=\"오늘 해야 할 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘 해야 할 일</h2>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 영상 및 슬라이드 시청, TIL - [<code class=\"language-text\">__proto__</code>, constructor, prototype, Object.create, ES6 class, super]</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> ES6 Syntax 슬라이드 보기</li>\n</ul>\n<h2 id=\"느낀점\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EC%A0%90\" aria-label=\"느낀점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀점</h2>\n<p>오늘 첫번째로는 Advanced Data Structures reference 분석하면서 내 코드와 비교하는 시간을 가졌다. reference 코드와 내 코드를 비교해보니 내 코드에서 개선해야 할 점들이 많이 보였다. <code class=\"language-text\">&amp;&amp;</code>, <code class=\"language-text\">||</code> 연산자를 이용해 if문을 좀 줄여볼 필요가 있다고 느꼈고, recursion 코드를 조금 더 간결하게 짜는 스킬을 습득해야겠다고 생각했다.\n그리고 두번재로는 subclassing이라는 것을 통해 <code class=\"language-text\">__proto__</code>, constructor, prototype, Object.create, ES6 class, super에 대해 알아보는 시간을 가졌는데 클래스에서 클래스로 프로토타입을 상속시키는 방법에 대해 다시한번 확실하게 짚고 넘어가는 시간이었다. prototype을 이용한 상속은 뭔가 조금 복잡하지만 이 복잡한 것을 해결해주는 class keyword라는 것에 대해서도 알게되었다..!! class keyword를 사용하니 정말 간결하게 코드가 작성되었다. 앞으로 많이 사용할 예정이다..😊\n세번째로 ES6 Syntax에 대해 알아보는 시간을 가졌는데 ES6 이전 버전에서 복잡하거나 불편하거나 가독성이 떨어진다고 느꼈던 것들에 대해 보안되어 새로운 기능들이 많이 추가된 것 같다는 생각을 하였다. 앞으로 자주 사용해서 익숙해지도록 하자..!</p>\n<h2 id=\"내일-할-일\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9D%BC-%ED%95%A0-%EC%9D%BC\" aria-label=\"내일 할 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내일 할 일</h2>\n<ul>\n<li>toy problem 2, 3(알고리즘)</li>\n<li>동일한 동작을 하는 로직을 pseudoclassical, ES6 class keyword를 이용해 상속을 직접 구현하는 Sprint</li>\n<li>HTML과 CSS를 활용하여 layout을 만드는 Sprint</li>\n</ul>","frontmatter":{"title":"2019-12-20","date":"December 20, 2019"}}},"pageContext":{"slug":"/til/20191220TIL/","previous":{"fields":{"slug":"/algorithm/timecomplexity/"},"frontmatter":{"title":"timeComplexity","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/javascript/subclassing /"},"frontmatter":{"title":"Subclassing","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}