{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/queueandstack/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"18f6764f-43a6-5d92-a3ec-f6b3bd2ecc02","excerpt":"Queue Queue는 편의점이나 마트에서 물건을 팔때 먼저 들어온 물건을 앞에 진열하여 팔리게하는 것과 비슷하다 image.png FIFO(First In First Out), 먼저 집어넣은 데이터가 먼저 나온다. 🏃🏻‍♂️ method enqueue 데이터를 집어넣는 메소드(맨 앞 요소)  dequeue 데이터를 추출하는 메소드 ✍ pseudo code (의사 코드)로 표현 image.png 데이터를 담을 공간을 만든다 => {} 초기 index를…","html":"<h2 id=\"queue\" style=\"position:relative;\"><a href=\"#queue\" aria-label=\"queue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queue</h2>\n<p>Queue는 편의점이나 마트에서 물건을 팔때 먼저 들어온 물건을 앞에 진열하여 팔리게하는 것과 비슷하다</p>\n<p><img src=\"https://images.velog.io/post-images/yhe228/951a1250-18c1-11ea-af62-df20a61bae43/image.png\" alt=\"image.png\"></p>\n<ul>\n<li>FIFO(First In First Out), 먼저 집어넣은 데이터가 먼저 나온다.</li>\n</ul>\n<h3 id=\"♂️-method\" style=\"position:relative;\"><a href=\"#%E2%99%82%EF%B8%8F-method\" aria-label=\"♂️ method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏃🏻‍♂️ method</h3>\n<ol>\n<li>\n<p>enqueue</p>\n<ul>\n<li>데이터를 집어넣는 메소드(맨 앞 요소) </li>\n</ul>\n</li>\n<li>\n<p>dequeue</p>\n<ul>\n<li>데이터를 추출하는 메소드</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"-pseudo-code-의사-코드로-표현\" style=\"position:relative;\"><a href=\"#-pseudo-code-%EC%9D%98%EC%82%AC-%EC%BD%94%EB%93%9C%EB%A1%9C-%ED%91%9C%ED%98%84\" aria-label=\" pseudo code 의사 코드로 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✍ pseudo code (의사 코드)로 표현</h3>\n<p><img src=\"https://images.velog.io/post-images/yhe228/bd8cf9b0-18ed-11ea-9380-57e25cc0c460/image.png\" alt=\"image.png\"></p>\n<ol>\n<li>데이터를 담을 공간을 만든다 => {}</li>\n<li>초기 index를 0으로 지정해준다.</li>\n<li>공간의 형태는 index : value</li>\n<li>\n<p>데이터를 넣는다 - enqueue</p>\n<ul>\n<li>값을 추가하고</li>\n<li>index ++</li>\n</ul>\n</li>\n<li>\n<p>데이터를 제거한다 - dequeue</p>\n<ul>\n<li>값을 제거하고</li>\n<li>index —</li>\n<li>값이 0부터 시작하도록 당겨준다</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"stack\" style=\"position:relative;\"><a href=\"#stack\" aria-label=\"stack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stack</h2>\n<p><img src=\"https://images.velog.io/post-images/yhe228/00c9d210-18c2-11ea-b433-d50f23f0e41b/image.png\" alt=\"image.png\"></p>\n<ul>\n<li>LIFO(Last In First Out), 나중에 집어넣은 데이터가 먼저 나옵니다</li>\n</ul>\n<h3 id=\"♂️-method-1\" style=\"position:relative;\"><a href=\"#%E2%99%82%EF%B8%8F-method-1\" aria-label=\"♂️ method 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏃🏻‍♂️ method</h3>\n<ol>\n<li>\n<p>pop</p>\n<ul>\n<li>데이터를 추출하는 메소드(마지막 요소)</li>\n</ul>\n</li>\n<li>\n<p>push</p>\n<ul>\n<li>데이터를 집어넣는 메소드</li>\n</ul>\n</li>\n<li>\n<p>peek</p>\n<ul>\n<li>스택의 맨 마지막 요소를 제거하지 않고 반환해 주는 메소드</li>\n</ul>\n</li>\n<li>\n<p>empty\n상황에따라 true 또는 false 반환</p>\n<ul>\n<li>스택이 비어 있으면 true</li>\n<li>그렇지 않으면 false</li>\n</ul>\n</li>\n<li>\n<p>size</p>\n<ul>\n<li>담긴 데이터의 length를 구하기 위한 메소드</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"-pseudo-code-의사-코드로-표현-1\" style=\"position:relative;\"><a href=\"#-pseudo-code-%EC%9D%98%EC%82%AC-%EC%BD%94%EB%93%9C%EB%A1%9C-%ED%91%9C%ED%98%84-1\" aria-label=\" pseudo code 의사 코드로 표현 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✍ pseudo code (의사 코드)로 표현</h3>\n<p><img src=\"https://images.velog.io/post-images/yhe228/cfcb3ba0-18ed-11ea-9380-57e25cc0c460/image.png\" alt=\"image.png\"></p>\n<ol>\n<li>데이터를 담을 공간을 만든다 => {}</li>\n<li>초기 index를 0으로 지정해준다.</li>\n<li>공간의 형태는 index : value</li>\n<li>\n<p>데이터를 넣는다 - push</p>\n<ul>\n<li>값을 추가하고</li>\n<li>index ++</li>\n</ul>\n</li>\n<li>\n<p>데이터를 제거한다 - pop</p>\n<ul>\n<li>값을 제거하고</li>\n<li>index —</li>\n</ul>\n</li>\n<li>공간의 index - 1 번째에 있는 값을 반환 - peek</li>\n<li>공간의 index가 0이면 false 0이 아니면 true를 반환 - empty</li>\n<li>공간의 index 반환 - size</li>\n</ol>\n<p>💁‍♀️ <a href=\"https://medium.com/@lyhlg0201/immersive-sprint-js-stack-queue-426ccfbdb602\">참고블로그</a></p>","frontmatter":{"title":"Queue & Stack","date":"December 07, 2019"}}},"pageContext":{"slug":"/algorithm/queueandstack/","previous":{"fields":{"slug":"/javascript/prototype/"},"frontmatter":{"title":"Prototype","category":"javascript","draft":false}},"next":{"fields":{"slug":"/til/20191207TIL/"},"frontmatter":{"title":"2019-12-07 TIL","category":"til","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}