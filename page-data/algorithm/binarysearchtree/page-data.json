{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/binarysearchtree/","result":{"data":{"site":{"siteMetadata":{"title":"Heaeun","author":"Heaeun","siteUrl":"https://yoonhe.github.io","comment":{"disqusShortName":"yoonhe","utterances":"yoonhe/yoonhe.github.io"},"sponsor":{"buyMeACoffeeId":"yoonhe"}}},"markdownRemark":{"id":"a17bb47c-a200-5e7d-9dde-f82234492330","excerpt":"이진탐색트리(Binary Search Tree) 이진탐색트리란 이진탐색과 연결리스트(Linked list)를 결합한 자료구조의 일종이다. 이진탐색의 효율적인 탐색 능력 + 연결리스트의 효율적인 자료 입력과 삭제 기능 이진탐색과 연결리스트가 서로의 단점을 보완해준다.\nimage.png…","html":"<h2 id=\"이진탐색트리binary-search-tree\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89%ED%8A%B8%EB%A6%ACbinary-search-tree\" aria-label=\"이진탐색트리binary search tree permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진탐색트리(Binary Search Tree)</h2>\n<ul>\n<li>이진탐색트리란 이진탐색과 연결리스트(Linked list)를 결합한 자료구조의 일종이다.</li>\n<li>이진탐색의 효율적인 탐색 능력 + 연결리스트의 효율적인 자료 입력과 삭제 기능</li>\n<li>이진탐색과 연결리스트가 서로의 단점을 보완해준다.\n<img src=\"https://images.velog.io/post-images/yhe228/2d9a0ba0-1b08-11ea-af97-59e7d03a8f7d/image.png\" alt=\"image.png\"></li>\n</ul>\n<h3 id=\"이진탐색트리-동작-원리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89%ED%8A%B8%EB%A6%AC-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"이진탐색트리 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진탐색트리 동작 원리</h3>\n<ul>\n<li>왼쪽 서브트리는 루트노드보다 작은 값을 가진 노드로 이루어져 있다.</li>\n<li>오른쪽 서브트리는 루트노드보다 큰 값을 가진 노드로 이루어져 있다.</li>\n<li>왼쪽과 오른쪽 서브트리도 이진탐색트리이다.</li>\n<li>중복된 노드가 없어야 한다.</li>\n</ul>\n<p><img src=\"https://images.velog.io/post-images/yhe228/07fceaa0-1b0a-11ea-b4c8-d5ec753f7f37/image.png\" alt=\"image.png\">\n위와 같은 트리에서 <code class=\"language-text\">11</code>을 탐색한다고 가정했을때,  </p>\n<ol>\n<li>루트노드(8)가 <code class=\"language-text\">11</code>보다 작기때문에 왼쪽 서브트리는 탐색할 필요가 없으며 오른쪽 서브티리만 탐색하면 된다. 탐색공간이 줄어들었다..!</li>\n<li>서브트리의 루트노트(9)가 <code class=\"language-text\">11</code>보다 작기때문에 오른쪽 서브트리를 탐색한다.</li>\n<li>오른쪽 트리에 있는 11을 찾았다.</li>\n</ol>\n<p>💁‍♀️ <a href=\"https://ratsgo.github.io/data%20structure&#x26;algorithm/2017/10/22/bst/\">참고블로그</a></p>","frontmatter":{"title":"Binary Search Tree","date":"December 10, 2019"}}},"pageContext":{"slug":"/algorithm/binarysearchtree/","previous":{"fields":{"slug":"/til/20191210TIL/"},"frontmatter":{"title":"2019-12-10","category":"til","draft":false}},"next":{"fields":{"slug":"/algorithm/hashtable/"},"frontmatter":{"title":"hashTable","category":"algorithm","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}