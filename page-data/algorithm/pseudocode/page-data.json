{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/pseudocode/","result":{"data":{"site":{"siteMetadata":{"title":"Bee starter","author":"[Your Name]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"8cddace4-558c-5172-a56b-8c9ec0ccde1e","excerpt":"알고리즘은 어떠한 문제를 해결하기 위한 절차를 만들어 내는 과정, 혹은 형태이다. 문제를 찾로 큰 문제를 잘게 분해한다 절차를 추론한다 반복되는 패턴을 찾는다 문제를 풀기 전에, 과정을 하나하나 pseudocode…","html":"<h2 id=\"알고리즘은-어떠한-문제를-해결하기-위한-절차를-만들어-내는-과정-혹은-형태이다\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%80-%EC%96%B4%EB%96%A0%ED%95%9C-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EC%A0%88%EC%B0%A8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%82%B4%EB%8A%94-%EA%B3%BC%EC%A0%95-%ED%98%B9%EC%9D%80-%ED%98%95%ED%83%9C%EC%9D%B4%EB%8B%A4\" aria-label=\"알고리즘은 어떠한 문제를 해결하기 위한 절차를 만들어 내는 과정 혹은 형태이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘은 어떠한 문제를 해결하기 위한 절차를 만들어 내는 과정, 혹은 형태이다.</h2>\n<ol>\n<li>문제를 찾로 큰 문제를 잘게 분해한다</li>\n<li>절차를 추론한다</li>\n<li>반복되는 패턴을 찾는다</li>\n</ol>\n<h2 id=\"문제를-풀기-전에-과정을-하나하나-pseudocode-의사코드로-적어낼-수-있다\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EB%A5%BC-%ED%92%80%EA%B8%B0-%EC%A0%84%EC%97%90-%EA%B3%BC%EC%A0%95%EC%9D%84-%ED%95%98%EB%82%98%ED%95%98%EB%82%98-pseudocode-%EC%9D%98%EC%82%AC%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%A0%81%EC%96%B4%EB%82%BC-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"문제를 풀기 전에 과정을 하나하나 pseudocode 의사코드로 적어낼 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제를 풀기 전에, 과정을 하나하나 pseudocode (의사코드)로 적어낼 수 있다.</h2>\n<ol>\n<li>프로그램의 절차 하나하나를 우리가 실제로 사용하는 일반적인 언어을 이용해서 작성하는 방법</li>\n<li>이는 실제로 컴퓨터가 알아들을 수 있는 언어가 아니기 때문에 실행할 수 있는 코드는 아니지만 코딩하기 전에 어떻게 프로그램이 작동하는지 흐름을 파악할 수 있다</li>\n</ol>\n<h2 id=\"알고리즘-예제\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%98%88%EC%A0%9C\" aria-label=\"알고리즘 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 예제</h2>\n<ul>\n<li>텍스트에서 foo라는 단어를 찾아 전부 다른 단어로 바꿔주는 코드작성</li>\n</ul>\n<h3 id=\"01-pseudocode-작성\" style=\"position:relative;\"><a href=\"#01-pseudocode-%EC%9E%91%EC%84%B1\" aria-label=\"01 pseudocode 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. pseudocode 작성</h3>\n<ol>\n<li>텍스트를 입력으로 받는다</li>\n<li>\n<p>foo라는 단어를 찾는다</p>\n<ul>\n<li>foo라는 글자의 index가 -1이 아니면 단어를 찾은 것이다</li>\n</ul>\n</li>\n<li>\n<p>단어를 발견하면</p>\n<ol>\n<li>index를 이용해 foo 바로 앞까지의 텍스트를 얻어낸다.</li>\n<li>foo 대신 새로운 단어를 넣는다</li>\n<li>foo 이후의 텍스트를 넣는다 </li>\n</ol>\n</li>\n<li>바뀐 내용을 리턴한다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token punctuation\">,</span> searchString</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// foo라는 글자의 index가 -1이 아니면 단어를 찾은 것이다</span>\n  <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>searchString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text<span class=\"token punctuation\">,</span> searchString<span class=\"token punctuation\">,</span> replaceString</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> searchString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">let</span> beforeText <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// index를 이용해 foo 바로 앞까지의 텍스트를 얻어내고</span>\n     <span class=\"token keyword\">let</span> replaceTest <span class=\"token operator\">=</span> replaceString<span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo 대신 새로운 단어를 넣는다</span>\n     <span class=\"token keyword\">let</span> afterTest <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> searchString<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo 이후의 텍스트를 넣는다</span>\n     \n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// index를 발견하면</span>\n       <span class=\"token keyword\">return</span> beforeText <span class=\"token operator\">+</span> replaceTest <span class=\"token operator\">+</span> afterTest<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 바뀐 내용을 리턴한다</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abcfoodef'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yoon'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"배운것\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EA%B2%83\" aria-label=\"배운것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운것</h2>\n<ol>\n<li>문제를 풀기전 pseudocode(의사코드) 사용의 중요성</li>\n<li>function을 통해 기능을 분리하는 방법</li>\n</ol>","frontmatter":{"title":"알고리즘 문제를 어떻게 풀어나갈까?","date":"November 20, 2019"}}},"pageContext":{"slug":"/algorithm/pseudocode/","previous":{"fields":{"slug":"/javascript/parameters/"},"frontmatter":{"title":"매개변수","category":"javascript","draft":false}},"next":{"fields":{"slug":"/javascript/closure/"},"frontmatter":{"title":"closure","category":"javascript","draft":false}}}},"staticQueryHashes":["2486386679","3128451518"]}